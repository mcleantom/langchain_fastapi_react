"""use postgres UUID type

Revision ID: 23cf1cad7c1b
Revises: 33410c2b0e8c
Create Date: 2025-04-14 11:28:04.829166

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '23cf1cad7c1b'
down_revision: Union[str, None] = '33410c2b0e8c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('sessions', 'id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('sessions', 'user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               nullable=False)
    op.create_foreign_key(None, 'sessions', 'users', ['user_id'], ['id'])
    op.alter_column('users', 'id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('users_id_seq'::regclass)"))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('users_id_seq'::regclass)"))
    op.drop_constraint(None, 'sessions', type_='foreignkey')
    op.alter_column('sessions', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               nullable=True)
    op.alter_column('sessions', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    # ### end Alembic commands ###
